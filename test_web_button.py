#!/usr/bin/env python3
"""
Teste espec√≠fico do bot√£o web "Gerar Sinal"
"""

import requests
import json

def test_web_button():
    """Simular clique no bot√£o web"""
    
    print("=== TESTE DO BOT√ÉO WEB 'GERAR SINAL' ===")
    
    base_url = "http://localhost:5000"
    
    try:
        # 1. Verificar se servidor est√° funcionando
        print("1. Verificando servidor...")
        response = requests.get(f"{base_url}/api/status", timeout=10)
        if response.status_code == 200:
            print("   ‚úÖ Servidor funcionando")
        else:
            print(f"   ‚ùå Servidor n√£o est√° funcionando: {response.status_code}")
            return
        
        # 2. Obter pre√ßo atual
        print("2. Obtendo pre√ßo atual...")
        response = requests.get(f"{base_url}/api/price/BTCUSDT", timeout=10)
        if response.status_code == 200:
            price_data = response.json()
            print(f"   ‚úÖ Pre√ßo BTCUSDT: ${price_data['price']:,.2f}")
        else:
            print(f"   ‚ùå Erro ao obter pre√ßo: {response.status_code}")
        
        # 3. Testar gera√ß√£o de sinal (simulando clique no bot√£o)
        print("3. Clicando no bot√£o 'Gerar Sinal'...")
        
        # Esta √© a mesma chamada que o bot√£o web faz
        response = requests.post(
            f"{base_url}/api/generate_signal",
            headers={"Content-Type": "application/json"},
            json={"symbol": "BTCUSDT"},
            timeout=30
        )
        
        print(f"   Status HTTP: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("   ‚úÖ Resposta do servidor:")
            print(f"      Success: {result.get('success', False)}")
            print(f"      Message: {result.get('message', 'N/A')}")
            
            if result.get('signal'):
                signal = result['signal']
                print("   üéØ SINAL GERADO COM SUCESSO!")
                print(f"      Tipo: {signal.get('signal_type', 'N/A')}")
                print(f"      Confian√ßa: {signal.get('confidence', 0):.1f}%")
                print(f"      Entry: ${signal.get('entry_price', 0):.2f}")
                print(f"      Stop Loss: ${signal.get('stop_loss', 0):.2f}")
                print(f"      Take Profit: ${signal.get('take_profit', 0):.2f}")
                print(f"      Raz√µes: {len(signal.get('reasons', []))} fatores")
                
                return "SUCCESS"
            else:
                print("   ‚ö†Ô∏è  Nenhum sinal foi gerado")
                return "NO_SIGNAL"
        else:
            print(f"   ‚ùå Erro HTTP: {response.status_code}")
            try:
                error_data = response.json()
                print(f"      Erro: {error_data}")
            except:
                print(f"      Resposta: {response.text}")
            return "ERROR"
    
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå Erro de conex√£o: {e}")
        return "CONNECTION_ERROR"
    
    except Exception as e:
        print(f"   ‚ùå Erro inesperado: {e}")
        return "UNEXPECTED_ERROR"

if __name__ == "__main__":
    result = test_web_button()
    print(f"\nüéØ RESULTADO FINAL: {result}")
    
    if result == "SUCCESS":
        print("‚úÖ BOT√ÉO WEB FUNCIONANDO PERFEITAMENTE!")
    elif result == "NO_SIGNAL":
        print("‚ö†Ô∏è  Bot√£o funciona, mas n√£o gerou sinal (pode ser normal)")
    else:
        print("‚ùå BOT√ÉO WEB N√ÉO EST√Å FUNCIONANDO")
